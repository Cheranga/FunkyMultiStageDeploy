steps:
  - task: AzureResourceManagerTemplateDeployment@3    
    displayName: 'Create function app'
    inputs:
      deploymentScope: 'Resource Group' 
      azureResourceManagerConnection: '$(azureSubscription)' 
      location: 'Australia Southeast' 
      action: 'Create Or Update Resource Group' 
      resourceGroupName: '$(rgName)'
      deploymentMode: 'Incremental' 
      csmFile: '$(Pipeline.Workspace)/deploy/FunctionApp/template.json' 
      csmParametersFile: '$(Pipeline.Workspace)/deploy/FunctionApp/template.parameters.json' 
      overrideParameters: |
        -functionAppName "func-$(functionAppName)-$(environmentName)" 
        -planName "plan-$(functionAppName)-$(environmentName)" 
        -keyVaultName "kv-$(functionAppName)-$(environmentName)" 
        -storageAccountName "st$(functionAppName)$(environmentName)" 

  - task: AzureFunctionApp@1
    displayName: "Deploy Azure Function App to slot"
    inputs:
      azureSubscription: "$(azureSubscription)"
      appType: functionApp
      appName: "func-$(functionAppName)-$(environmentName)"
      package: "$(Pipeline.Workspace)/drop/$(Build.BuildId).zip"
      deployToSlotOrASE: true
      resourceGroupName: "$(rgName)"
      slotName: "Staging"

  - task: AzureAppServiceManage@0
    displayName: 'Start Staging Slot'
    inputs:
      azureSubscription: '$(azureSubscription)'    
      Action: 'Start Azure App Service'
      WebAppName: 'func-$(functionAppName)-$(environmentName)'
      SpecifySlotOrASE: true
      ResourceGroupName: "$(rgName)"
      Slot: Staging      

  # - task: AzureFunctionApp@1
  #   displayName: 'Deploy Azure Function App'
  #   inputs:
  #     azureSubscription: '$(azureSubscription)'
  #     resourceGroupName: '$(rgName)'
  #     appType: functionApp
  #     appName: 'func-$(functionAppName)-$(environmentName)'
  #     package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'        
      